// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RRFFilesManager.DataAccess;

namespace RRFFilesManager.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221215045243_FileStatusUpdate")]
    partial class FileStatusUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RRFFilesManager.Abstractions.Archive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CGPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRangeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRangeTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentGroupID")
                        .HasColumnType("int");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("HHPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthcarePractitioner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IEAssessPdToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRBPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MRACPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MRPaidToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonEarnerPdToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyClaimLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatementPeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StatementPeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("TreatmentAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAssessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfMotion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfParty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DocumentCategoryID");

                    b.HasIndex("DocumentGroupID");

                    b.HasIndex("DocumentTypeID");

                    b.HasIndex("FileId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailToText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileCarrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuiteApt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.ComissionCalculator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComissionSubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeductibleAchieved")
                        .HasColumnType("bit");

                    b.Property<double?>("FLBaseComissionMultiplier")
                        .HasColumnType("float");

                    b.Property<int?>("FileLawyerID")
                        .HasColumnType("int");

                    b.Property<double?>("MatterProceededToTrialMultiplier")
                        .HasColumnType("float");

                    b.Property<int?>("MatterTypeID")
                        .HasColumnType("int");

                    b.Property<double?>("RLBaseComissionMultiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RLDeductibleAchievedx1d5Multiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RLDeductibleAchievedx2Multiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RLMatterProceededToABHearingMultiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RPBaseComissionMultiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RPDeductibleAchievedx1d5Multiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RPDeductibleAchievedx2Multiplier")
                        .HasColumnType("float");

                    b.Property<double?>("RPMatterProceededToABHearingMultiplier")
                        .HasColumnType("float");

                    b.Property<int?>("ResponsibleLawyerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FileLawyerID");

                    b.HasIndex("MatterTypeID");

                    b.HasIndex("ResponsibleLawyerID");

                    b.ToTable("ComissionCalculator");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.ComissionSubType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ContigencyFee")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatterTypeID")
                        .HasColumnType("int");

                    b.Property<double>("ProjectedDisbursementsAmount")
                        .HasColumnType("float");

                    b.Property<double>("ProjectedSettlementDays")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("MatterTypeID");

                    b.ToTable("ComissionSubTypes");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("Contact1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Contact2Id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailToText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("HealthCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileCarrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Contact1Id");

                    b.HasIndex("Contact2Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DisabilityInsuranceCompany", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DisabilityInsuranceCompanies");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DocumentCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentForm")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentGroupID")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentNameType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DocumentGroupID");

                    b.ToTable("DocumentCategories");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DocumentGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentForm")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentNameType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DocumentGroups");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DocumentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DocumentForm")
                        .HasColumnType("int");

                    b.Property<int>("DocumentNameType")
                        .HasColumnType("int");

                    b.Property<string>("IndexCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DocumentCategoryID");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Drug", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveIngredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.File", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOFLoss")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCall")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfStatusChange")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileLawyerID")
                        .HasColumnType("int");

                    b.Property<int>("FileNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HowHearID")
                        .HasColumnType("int");

                    b.Property<string>("LimitationPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatterSubTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("MatterTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleLawyerID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffInterviewerID")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryNotice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubTypeCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("CurrentStatusID");

                    b.HasIndex("FileLawyerID");

                    b.HasIndex("HowHearID");

                    b.HasIndex("MatterSubTypeID");

                    b.HasIndex("MatterTypeID");

                    b.HasIndex("PreviousStatusID");

                    b.HasIndex("ResponsibleLawyerID");

                    b.HasIndex("StaffInterviewerID");

                    b.HasIndex("SubTypeCategoryID");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileContact", b =>
                {
                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("FileId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("FileContacts");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FilePath", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UploadArchivesSettingsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UploadArchivesSettingsID");

                    b.ToTable("FilePath");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileReview", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("FRActionABenefitsStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("FRCausationIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRCurrentDisbursements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRDamagesIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FRFileProgressionConsiderations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRLiabilityIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FROtherNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRProjectedDisbursements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRProjectedFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRProjectedProfitMargin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FRProjectedSettlementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FRProjectedSettlementValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FileID");

                    b.ToTable("FileReviews");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FileStatus");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedByID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeferUntilDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotifiedRRFDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskStartedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate3")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AddedByID");

                    b.HasIndex("FileId");

                    b.HasIndex("StateID");

                    b.HasIndex("TaskId");

                    b.ToTable("FileTasks");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.HearAboutUs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HearAboutUs");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Intake", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccBenAdjuster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenClaimNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenDriverPassenger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenInsuranceCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenOCF1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenOCF2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenOCF3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenPolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenRegisOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenReplacBenef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBenWereRegisOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamHeadInjuries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamHitVehicleConcrete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamLowerBodyInjuries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamPreAccident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamPreIllness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamPrescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamPsychologicalEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamUpperBodyInjuries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamWereSeeingDoctor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILCollecInsurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILEmployed4Weeks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILEmployed52Weeks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILEmployeeGrossEarning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILExplainJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILHowLongBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILHowLongEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILJobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILSelfBusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILSelfGrossEarning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILT4Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILT4Employee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILWereEmployed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EILWereSelfEmployed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LiaDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LiaDriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaEstimDamage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaFaultPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaHaveCopy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaHavePhotos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaInsuranceCo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LiaMVCExchange")
                        .HasColumnType("bit");

                    b.Property<bool>("LiaMVR")
                        .HasColumnType("bit");

                    b.Property<string>("LiaMunicipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaNotifiedMunicipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LiaOtherDoc")
                        .HasColumnType("bit");

                    b.Property<string>("LiaOwnNegligence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LiaReportCollision")
                        .HasColumnType("bit");

                    b.Property<string>("LiaWhereAccident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiaYourFault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolApplicationForCPP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolCPPApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolCPPOwnOrCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolCompanyDeniedBenefitsID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PolDateLastDayLTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PolDateLostBenefits")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PolDateStartedCollLTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PolDateSubmittedLTD")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolDeniedSTPorLTD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolFirstTimeLTDApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolHowMuchBeingPaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolLTDPrivateOrEmployerGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolOtherNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolReasonTerminateLTD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolSickBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolWhoPaidBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.HasIndex("PolCompanyDeniedBenefitsID");

                    b.ToTable("Intakes");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Lawyer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClearanceLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EarnBaseCommissionAsFileLawyer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParalegal")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResponsibleLawyerBaseCommissionMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lawyers");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.LawyerTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedByID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeferUntilDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LawyerId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotifiedRRFDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskStartedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkedOnDate3")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AddedByID");

                    b.HasIndex("LawyerId");

                    b.HasIndex("StateID");

                    b.HasIndex("TaskId");

                    b.ToTable("LawyerTasks");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.LogItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LawyerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LawyerID");

                    b.ToTable("LogItems");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MatterSubType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DaysFromDateOfLoss")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatterTypeID")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryNotice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MatterTypeID");

                    b.ToTable("MatterSubTypes");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MatterType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ContigencyFee")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProjectedDisbursementsAmount")
                        .HasColumnType("float");

                    b.Property<double?>("ProjectedSettlementDays")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("MatterTypes");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MedicalSummary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArchiveID")
                        .HasColumnType("int");

                    b.Property<string>("ClientPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DistanceKilometres")
                        .HasColumnType("float");

                    b.Property<int?>("DocumentCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentGroupID")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentTypeID")
                        .HasColumnType("int");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("TreatmentCentrePostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ArchiveID");

                    b.HasIndex("DocumentCategoryID");

                    b.HasIndex("DocumentGroupID");

                    b.HasIndex("DocumentTypeID");

                    b.HasIndex("FileId");

                    b.ToTable("MedicalSummaries");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MobileCarrier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MobileCarriers");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.OutOfPocketHealthCareExp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArchiveID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DispenseQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("DrugID")
                        .HasColumnType("int");

                    b.Property<int?>("FileID")
                        .HasColumnType("int");

                    b.Property<double?>("MiscExpenses")
                        .HasColumnType("float");

                    b.Property<double?>("ParkingExpenses")
                        .HasColumnType("float");

                    b.Property<int?>("PharmacyID")
                        .HasColumnType("int");

                    b.Property<double?>("ReturnKilometresTraveled")
                        .HasColumnType("float");

                    b.Property<DateTime>("RxFillDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TravelExpenses")
                        .HasColumnType("float");

                    b.Property<double?>("TreatmentExpenses")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("ArchiveID");

                    b.HasIndex("DrugID");

                    b.HasIndex("FileID");

                    b.HasIndex("PharmacyID");

                    b.ToTable("OutOfPocketHealthCareExp");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Pharmacy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.StandardBenefitRow", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ArchiveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<double>("IEAmount")
                        .HasColumnType("float");

                    b.Property<string>("MRGSAProvided")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ArchiveId");

                    b.ToTable("StandardBenefitRows");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID")
                        .HasColumnType("int");

                    b.Property<int>("DeferBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsMasterTask")
                        .HasColumnType("bit");

                    b.Property<int?>("LawyerID")
                        .HasColumnType("int");

                    b.Property<bool>("LockDueDate")
                        .HasColumnType("bit");

                    b.Property<int?>("TaskCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("LawyerID");

                    b.HasIndex("TaskCategoryID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.TaskCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TaskCategories");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.TaskDependency", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("DependencyId")
                        .HasColumnType("int");

                    b.HasKey("TaskId", "DependencyId");

                    b.HasIndex("DependencyId");

                    b.ToTable("TaskDependencies");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.TaskState", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TaskStates");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatterTypeID")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplatePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MatterTypeID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Timeline", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActualDateSOCIssued")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActualDateSOCServed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AllDefendantUndertakingRecd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDefendantDiscovery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPlaintiffDiscovery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePlaintiffUndertakingComplete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateToFileTrialRecordBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTrialRecordFiled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DefendantAODRequest")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LiabilityMeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MedicalSummariesPreDiscDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlaintiffAODSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PreDiscoveryMeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrePleadingsMeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProposedDateIssueSOC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProposedDateToServeSOC")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("Timelines");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.UploadArchivesSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OutputFolder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UploadArchivesSettings");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Archive", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.DocumentCategory", "DocumentCategory")
                        .WithMany()
                        .HasForeignKey("DocumentCategoryID");

                    b.HasOne("RRFFilesManager.Abstractions.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("DocumentGroupID");

                    b.HasOne("RRFFilesManager.Abstractions.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeID");

                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany("Archives")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Client", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.ComissionCalculator", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "FileLawyer")
                        .WithMany()
                        .HasForeignKey("FileLawyerID");

                    b.HasOne("RRFFilesManager.Abstractions.MatterType", "MatterType")
                        .WithMany()
                        .HasForeignKey("MatterTypeID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "ResponsibleLawyer")
                        .WithMany()
                        .HasForeignKey("ResponsibleLawyerID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.ComissionSubType", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.MatterType", "MatterType")
                        .WithMany()
                        .HasForeignKey("MatterTypeID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Company", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Contact", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("RRFFilesManager.Abstractions.Contact", "Contact1")
                        .WithMany()
                        .HasForeignKey("Contact1Id");

                    b.HasOne("RRFFilesManager.Abstractions.Contact", "Contact2")
                        .WithMany()
                        .HasForeignKey("Contact2Id");

                    b.HasOne("RRFFilesManager.Abstractions.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID");

                    b.HasOne("RRFFilesManager.Abstractions.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DocumentCategory", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("DocumentGroupID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.DocumentType", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.DocumentCategory", "DocumentCategory")
                        .WithMany()
                        .HasForeignKey("DocumentCategoryID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.File", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Contact", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.HasOne("RRFFilesManager.Abstractions.FileStatus", "CurrentStatus")
                        .WithMany()
                        .HasForeignKey("CurrentStatusID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "FileLawyer")
                        .WithMany()
                        .HasForeignKey("FileLawyerID");

                    b.HasOne("RRFFilesManager.Abstractions.HearAboutUs", "HowHear")
                        .WithMany()
                        .HasForeignKey("HowHearID");

                    b.HasOne("RRFFilesManager.Abstractions.MatterSubType", "MatterSubType")
                        .WithMany()
                        .HasForeignKey("MatterSubTypeID");

                    b.HasOne("RRFFilesManager.Abstractions.MatterType", "MatterType")
                        .WithMany()
                        .HasForeignKey("MatterTypeID");

                    b.HasOne("RRFFilesManager.Abstractions.FileStatus", "PreviousStatus")
                        .WithMany()
                        .HasForeignKey("PreviousStatusID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "ResponsibleLawyer")
                        .WithMany()
                        .HasForeignKey("ResponsibleLawyerID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "StaffInterviewer")
                        .WithMany()
                        .HasForeignKey("StaffInterviewerID");

                    b.HasOne("RRFFilesManager.Abstractions.ComissionSubType", "SubTypeCategory")
                        .WithMany()
                        .HasForeignKey("SubTypeCategoryID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileContact", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Contact", "Contact")
                        .WithMany("Peoples")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany("Peoples")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FilePath", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.UploadArchivesSettings", null)
                        .WithMany("InputFolders")
                        .HasForeignKey("UploadArchivesSettingsID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileReview", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany("Reviews")
                        .HasForeignKey("FileID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.FileTask", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedByID");

                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany("Tasks")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.TaskState", "State")
                        .WithMany()
                        .HasForeignKey("StateID");

                    b.HasOne("RRFFilesManager.Abstractions.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Intake", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithOne("Intake")
                        .HasForeignKey("RRFFilesManager.Abstractions.Intake", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.DisabilityInsuranceCompany", "PolCompanyDeniedBenefits")
                        .WithMany()
                        .HasForeignKey("PolCompanyDeniedBenefitsID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.LawyerTask", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedByID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "Lawyer")
                        .WithMany("Tasks")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.TaskState", "State")
                        .WithMany()
                        .HasForeignKey("StateID");

                    b.HasOne("RRFFilesManager.Abstractions.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.LogItem", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "Lawyer")
                        .WithMany()
                        .HasForeignKey("LawyerID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MatterSubType", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.MatterType", "MatterType")
                        .WithMany()
                        .HasForeignKey("MatterTypeID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.MedicalSummary", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Archive", "Archive")
                        .WithMany()
                        .HasForeignKey("ArchiveID");

                    b.HasOne("RRFFilesManager.Abstractions.DocumentCategory", "DocumentCategory")
                        .WithMany()
                        .HasForeignKey("DocumentCategoryID");

                    b.HasOne("RRFFilesManager.Abstractions.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("DocumentGroupID");

                    b.HasOne("RRFFilesManager.Abstractions.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeID");

                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.OutOfPocketHealthCareExp", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Archive", "Archive")
                        .WithMany()
                        .HasForeignKey("ArchiveID");

                    b.HasOne("RRFFilesManager.Abstractions.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugID");

                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithMany("Prescriptions")
                        .HasForeignKey("FileID");

                    b.HasOne("RRFFilesManager.Abstractions.Pharmacy", "Pharmacy")
                        .WithMany()
                        .HasForeignKey("PharmacyID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Pharmacy", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Position", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.StandardBenefitRow", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Archive", "Archive")
                        .WithMany("StandardBenefitRows")
                        .HasForeignKey("ArchiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Task", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("RRFFilesManager.Abstractions.Lawyer", "Lawyer")
                        .WithMany()
                        .HasForeignKey("LawyerID");

                    b.HasOne("RRFFilesManager.Abstractions.TaskCategory", "TaskCategory")
                        .WithMany()
                        .HasForeignKey("TaskCategoryID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.TaskDependency", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.Task", "Dependency")
                        .WithMany()
                        .HasForeignKey("DependencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRFFilesManager.Abstractions.Task", "Task")
                        .WithMany("Dependencies")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Template", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.MatterType", "MatterType")
                        .WithMany()
                        .HasForeignKey("MatterTypeID");
                });

            modelBuilder.Entity("RRFFilesManager.Abstractions.Timeline", b =>
                {
                    b.HasOne("RRFFilesManager.Abstractions.File", "File")
                        .WithOne("Timeline")
                        .HasForeignKey("RRFFilesManager.Abstractions.Timeline", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
